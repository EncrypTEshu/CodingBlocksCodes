package Lecture18;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public class Basic_HashMap {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String str="aaabcdsfkladjdddddddddddddddddddddddaaddd";
		System.out.println(maxChar(str));
		int[] one= {1,3,5,6};
		int[] two= {1,2,3,4,5,6,7,8};
		System.out.println(getUnique(one, two));
	}
	public static char maxChar(String str) {
		HashMap<Character, Integer> occ=new HashMap<Character, Integer>();
		for(int i=0;i<str.length();i++) {
			char cc=str.charAt(i);
			if(occ.containsKey(cc)) {
				int value=occ.get(cc);
				int newv=value+1;
				occ.put(cc, newv);
			}
			else {
				occ.put(cc, 1);
			}
			
		}
		char maxchar='\0';
		int max=0;
		Set<Map.Entry<Character, Integer>> enteries=occ.entrySet();
		for(Map.Entry<Character, Integer> enter:enteries) {
			if(enter.getValue()>max) {
				max=enter.getValue();
				maxchar=enter.getKey();
			}
		}
		return maxchar;
	}
	public static ArrayList<Integer>getUnique(int[] one,int[] two){
		HashMap<Integer, Boolean> map=new HashMap<Integer, Boolean>();
		ArrayList<Integer> inter=new ArrayList<Integer>();
		for(int i=0;i<one.length;i++) {
			map.put(one[i], false);
		}
		for(int i=0;i<two.length;i++) {
		  if(map.containsKey(two[i])) {
			  map.put(two[i], true);
		  }
		}
		Set<Map.Entry<Integer, Boolean>> entery=map.entrySet();
		for(Map.Entry<Integer, Boolean> enter:entery) {
			if(enter.getValue()) {
				inter.add(enter.getKey());
			}
		}
		return inter;
	}
}
