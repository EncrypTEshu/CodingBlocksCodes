package Lecture17;

public class BoardPath {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
			int n=10;
			int[] strg=new int[n+1];
			System.out.println(countBoardPath(0, n));
			System.out.println(countBoardPathRS(0, n,strg));
			System.out.println(cbpIS(n, 0));
	}

	public static int countBoardPath(int cc,int end) {
		if (cc > end) {
			
			return 0;
		}
		if (cc == end) {
			return 1;
		}
		int count=0;
	
			
		
		for (int dice = 1; dice <= 6; dice++) {
		count=count+ countBoardPath(cc + dice, end);
		
			
		}
	
		return count;
	}
	public static int countBoardPathRS(int cc,int end,int[] strg) {
		if (cc > end) {
			
			return 0;
		}
		if (cc == end) {
			return 1;
		}
		int count=0;
		if(strg[cc]!=0)
			return strg[cc];
		
		for (int dice = 1; dice <= 6; dice++) {
		count=count+ countBoardPathRS(cc + dice, end,strg);
		
			
		}
		strg[cc]=count;
		return count;
	}
	public static int cbpIS(int end,int curr) {
		int[] strg=new int[end+1];
		
		strg[end]=1;
		strg[end-1]=1;
		for(int i=end-2;i>=0;i--) {
			int sum=0;
			for(int j=i;j<=i+6&&j<=10;j++) {
				sum+=strg[j];
			}
			strg[i]=sum;
		}
		return strg[curr];
	}
	

}
